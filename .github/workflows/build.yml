name: build eoscdt

on:
  push:
    branches: [ main ]
    tags:
      - "v*.*.*"
  # pull_request:
  #   branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      EOSCDT_VERSION: 0.1.1
      CDT_VERSION: 0.1.0
    strategy:
      matrix:
        python-version: [3.9]
        os: ['windows-latest', 'ubuntu-20.04', 'macos-12']
        # python-version: [3.9]
        # os: ['ubuntu-20.04']
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: brechtm/setup-scoop@v2
        if: ${{ matrix.os == 'windows-latest' }}
        with:
          scoop_update: 'false'
#https://github.com/ScoopInstaller/Scoop/issues/4917
      - name: Install Dependencies
        if: ${{ matrix.os == 'windows-latest' }}
        shell: bash
        run: |
          scoop bucket rm main
          scoop bucket add main
          scoop bucket add extras
          choco install wget --no-progress
      - name:  Download cdt release for windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          wget https://github.com/uuosio/cdt/releases/download/v${{ env.CDT_VERSION }}/release-windows.tar.gz
          tar -xzf release-windows.tar.gz  -C ./pysrc
      - name:  Download cdt release for linux
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: |
          wget https://github.com/uuosio/cdt/releases/download/v${{ env.CDT_VERSION }}/release-linux.tar.gz
          tar -xf release-linux.tar.gz -C ./pysrc
      - name:  Download cdt release for macos
        if: ${{ matrix.os == 'macos-12' }}
        run: |
          wget https://github.com/uuosio/cdt/releases/download/v${{ env.CDT_VERSION }}/release-macos.tar.gz
          tar -xf release-macos.tar.gz -C ./pysrc
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: get plat name
        id: platname
        run: |
          echo "::set-output name=value::$(python scripts/get_plat_name.py)"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel
      - name: Build eoscdt
        run: |
          python setup.py sdist bdist_wheel --plat-name ${{ steps.platname.outputs.value }} > setup.log
      - name: get whl file
        id: whlfile
        run: |
          echo "::set-output name=value::$(python scripts/get_whl_file.py)"
      - name: Install eoscdt
        run: |
          python -m pip install ./dist/${{ steps.whlfile.outputs.value }}
      # - name: Setup upterm session
      #   uses: lhotari/action-upterm@v1
      - name: Test eoscdt
        run: |
          cdt-cpp --help
      - name: release-eoscdt
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./dist/${{ steps.whlfile.outputs.value }}
